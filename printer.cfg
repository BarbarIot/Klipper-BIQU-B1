[include mainsail.cfg]
;[include rpi_gpio.cfg]
;[include SEEED.cfg]
[include timelapse.cfg]

[mcu]
# Connecting to Pi Zero 2 W over UART
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0CC0FF11881C4AAF5DAE685DC02000F5-if00
restart_method: command

[safe_z_home]
home_xy_position: 50, 50
speed: 30
z_hop: 15
z_hop_speed: 10

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: !P1.29
position_endstop: 0
position_max: 230
homing_speed: 50

[stepper_y]
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: !P1.28
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_z]
step_pin: P0.22
dir_pin: !P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -3
homing_speed: 20
homing_retract_dist: 5.0
# Distance to backoff (in mm) before homing a second time during
# homing. Set this to zero to disable the second home. The default
# is 5mm.
homing_retract_speed: 10
# Speed to use on the retract move after homing in case this should
# be different from the homing speed, which is the default for this
# parameter
second_homing_speed: 5
# Velocity (in mm/s) of the stepper when performing the second home.
# The default is homing_speed/2.

[stepper_z1]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200

[z_tilt]
z_positions:
  40,117
  200,117
points:
  185,50
  50,50
# A list of X, Y coordinates (one per line; subsequent lines
# indented) that should be probed during a Z_TILT_ADJUST command.
# Specify coordinates of the nozzle and be sure the probe is above
# the bed at the given nozzle coordinates. This parameter must be
# provided.
speed: 200
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
horizontal_move_z: 10
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
retries:20
# Number of times to retry if the probed points aren't within
# tolerance.
retry_tolerance: 0.01
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.utput.

;[heater_fan hotend_fan]
;pin: P2.4
#max_power: 1.0
;fan_speed: 1
#kick_start_time: 0
;heater: extruder
;heater_temp: 50.0

[extruder]
step_pin: P1.15
dir_pin: !P1.14
enable_pin: !P1.16
microsteps: 16
rotation_distance: 3.434
;gear_ratio: 7:1
nozzle_diameter: 0.400
max_extrude_only_accel: 2000.0
filament_diameter: 1.750
pressure_advance: 0.082
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
pid_kp = 20.816
pid_ki = 0.890
pid_kd = 121.776
min_temp: 0
max_temp: 300
max_extrude_only_distance: 200.0

[verify_heater extruder]
max_error: 250
hysteresis: 100
heating_gain: 0.3

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
control: pid
pid_kp = 61.319
pid_ki = 1.424
pid_kd = 659.942
min_temp: 0
max_temp: 130

[temperature_sensor PINDA]
sensor_type: Generic 3950
sensor_pin: P0.23
max_temp:200

[fan]
pin: P2.4

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 35
max_z_accel: 75
square_corner_velocity: 3.0

# Can control with SET_LED LED=hotend RED=x.x GREEN=x.x BLUE=x.x
[neopixel light]
pin: P1.24
chain_count: 24
color_order: GRB
# Set to on-brand BIQU-B1 hot pink
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 0.231


# Results of manual resonance measuring
[input_shaper]
shaper_freq_x: 38.76
shaper_freq_y: 57.69
shaper_type: mzv

[probe]
pin: P1.27
x_offset: -34.25
y_offset: 1.30
#z_offset: 1.10
samples: 2
samples_result: average

;[screws_tilt_adjust]
;screw1: 35, 35
;screw1_name: front left screw
;screw2: 205, 205
;screw2_name: front right screw
;screw2: 35, 205
;screw3_name: rear right screw
;screw4: 205, 35
;screw4_name: rear left screw
;horizontal_move_z: 10.
;speed: 50.
;screw_thread: CW-M4

[bed_screws]
screw1: 40, 40
screw2: 195, 195
screw3: 40, 195
screw4: 195, 40

[bed_mesh]
speed: 70
horizontal_move_z: 3
mesh_min: 19.15, 73
mesh_max: 180, 180
probe_count: 4, 4
mesh_pps: 2,2
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
#relative_reference_index: 7

[pause_resume]
recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#[include print_area_bed_mesh.cfg]

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
unretract_extra_length: 0.0
retract_speed: 10
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 5
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE # PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}

;[gcode_macro Z_TILT_ADJUST]
;gcode:
 ;   RENAME = Z_TILT_ADJUST2
  ;   {% if printer.homed_axes != 'XYZ' %}
	;G28			#Home All Axes
    ;{% endif %}
    ;Z_TILT_ADJUST2

[input_shaper]
shaper_freq_x: 45.45
shaper_freq_y: 57.14

[save_variables]
filename: ~/klipper_config/variables.cfg ; variable storage file

[gcode_macro PRINT_START]
gcode:
    {% if printer.homed_axes != 'XYZ' %}
	G28			#Home All Axes
    {% endif %}
    G92 E0
    G91
    G1 Z20.0 F3000
    G90
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}
    {% if printer.heater_bed.temperature > ((BED_TEMP*0.6)+8)%}; wait for bed temperature
              M104 S145 
              M190 S{BED_TEMP}
             {% else %}
              M190 S{BED_TEMP*0.6}
            {% endif %}
    M104 S145 
    M190 S{BED_TEMP}
    M104 S145
    Z_TILT_ADJUST
    LEVEL_BED_ADVANCED MAX_AGE=5 ; probe mesh eventually... whatever else you want to do before print   
    M109 S{EXTRUDER_TEMP}
    ;M117 Purging
    G1 X4.0 Y0.1 Z0.3 F5000.0
    G1 X200 Y0.1 Z0.3 F1500.0 E15  ; Draw the first line
    G1 X200 Y0.4 Z0.3 F5000.0      ; Move to side a little
    G1 X4.0 Y0.4 Z0.3 F1500.0 E30     ; Draw the second line
    G92 E0                           ; Reset Extruder
    ;M117 Lets make
    G1 Z2.0 F3000                    ; Move Z Axis up little to prevent scratching of Heat Bed
    G10          ; Move over to prevent blob squish
    G92 E0

[gcode_macro PRINT_END]
gcode:
    G91 ; Relative positioning
    G1 E-3 F1800 ; Retract
    G1 F3000 Z3 ; Move up
    G90 ; Absolute pos.
    G1 X0 Y200; present print
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    SAVE_IF_SET     ; SAVE_CONFIG if a mesh was probed in START_PRINT
    M84 ; Disable steppers
    ;TIMELAPSE_RENDER
     {% if printer.heater_bed.temperature < 50%}
       {action_call_remote_method("set_device_power", device="homeassistant_switch", state="off")}
        {% endif %}
  

[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."} 

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")} 

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
  
    BED_MESH_CALIBRATE
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    BED_MESH_PROFILE LOAD=default
  {% endif %} 

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}

###################################
#PRINTER POWER END
###################################

[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="switch.shelly1pm_e8db84d2a127",
                             state="off")}

[gcode_macro SCREWS_TILT_CALCULATE]
gcode:
    SCREWS_TILT_CALCULATE
########################################
# TMC2208 configuration
# From TMC docs, max current=2A, so max RMS current~=1.4A
# Settled at 1.2A for some headroom
# Per Klipper docs, prefer not to set hold_current
# stealthchop only enabled on Z to due better accuracy of spreadcycle
########################################

[tmc2208 stepper_x]
uart_pin: P1.10
run_current: 1.200
#hold_current: 0.720
;stealthchop_threshold: 999999
[tmc2208 stepper_y]
uart_pin: P1.9
run_current: 1.200
#hold_current: 0.720
;stealthchop_threshold: 999999

[tmc2208 stepper_z]
uart_pin: P1.8
run_current: 1.200
#hold_current: 0.720
stealthchop_threshold: 99999

[tmc2208 stepper_z1]
uart_pin: P1.4
run_current: 1.200
#hold_current: 0.720
stealthchop_threshold: 99999

[tmc2208 extruder]
uart_pin: P1.1
run_current: 0.800
#hold_current: 0.720
;stealthchop_threshold: 777777



########################################
# EXP1 / EXP2 (display) pins
# Unused currently, TODO setting up touch screen
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

#[display]
#lcd_type: st7920
#cs_pin: EXP1_7
#sclk_pin: EXP1_6
#sid_pin: EXP1_8
#encoder_pins: ^EXP1_5, ^EXP1_3
#click_pin: ^!EXP1_2

;[output_pin beeper]
;pin: EXP1_1

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.003873, 0.114877, 0.065502, 0.057377
#*# 	-0.111373, 0.048627, 0.027377, 0.043627
#*# 	-0.190123, -0.036373, -0.016373, 0.011127
#*# 	-0.286373, -0.118873, -0.053873, 0.018002
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 19.15
#*# max_x = 179.97
#*# min_y = 73.0
#*# max_y = 179.97
#*#
#*# [probe]
#*# z_offset = 0.660
